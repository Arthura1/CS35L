Exercise 1.1:
1.
e m a c s SP e x e r 1 . h t m l Enter

2.
C-s U T

3.
Home
C-s I n

4.
M-<
C-s H
M-b
Right

5.
M-<
C-s a r r o w
M-b

6.
C-e

7.
C-a

8.
M-<

9.
Nothing

10.
M-<

11.
C-x C-c

Exercise 1.2

1.
e m a c s SP e x e r 2 . h t m l Enter

2.
M-g 1 8 Enter
C-k

3.
C-s <!
Home
C-k

4.
C-s M-p C-s
Home C-k DOWN C-k DOWN C-k

5.
C-s M-p C-s
C-d C-d C-d C-d C-d Backspace Backspace

Exercise 1.3:
1.
e m a c s SP e x e r 3 . h t m l Enter

2.
C-s A
M-f M-f Backspace 3 7

C-s A
M-f M-f Backspace 3 7

3.
M-<
C-s U T
M-f Backspace Backspace S
Right Right Backspace A S C I I

4.
M-<
C-s < o
C-e Enter

5.
C-x C-c y
Enter y e s

Exercise 1.4

1.
c a t SP e x e r 2 . h t m l SP e x e r 2 . d i f f SP
 >e x e r 4 . h t m l Enter

2. 
e m a c s SP e x e r 4 . h t m l Enter

3.
M-r
C-r < ! Enter C-@ C-s - > M-w
M-g g 3 3 9 Enter M-b M-b M-f C-y

4.
M-r C-r C-r < ! Enter C-@ C-e C-n C-n M-w
M-g g 3 0 1 Enter C-y C-a C-d C-p C-d
M-> C-r M-p C-r C-r C-r Enter C-@ C-e M-w
M-g g 9 4 Enter C-y
M-> C-r M-p C-r C-r C-r C-r Enter C-@ C-e M-w
M-g g 1 8 Enter C-y

5.
M-> C-r
C-r - - - C-r Enter Backspace

6.
C-x u

7.
< ! - - C-o M-% - - > Enter - - > < ! - - Enter y y y y M-> - - >

8.
M-< M-% < o l > Enter < O l > Enter y y y y y y y
There are 7 instances.

9.
d i f f SP - u SP e x e r 1 . h t m l SP e x e r 4 . h t m l SP
> e x e r 4 . d i f f Enter
It works.

Exercise 1.5:

1.
e m a c s Enter
M-x m k d i r Enter
j u n k Enter

2.
M-x c d Enter
j u n k Enter
C-x C-f h e l l o . c Enter
Copy the file
C-x C-s

3.
M-x c o m p i l e Enter
Backspace Backspace Backspace Backspace Backspace Backspace Backspace Backspace
// Those Backspaces are used to delete the "make -k "command
g c c SP - o SP h e l l o SP h e l l o . c Enter

4.
M-x c o m p i l e Enter
DOWN . / h e l l o Enter
C-x 0 Enter
C-x C-w h e l l o - o u t Enter

5.
C-x i ~ / c s 3 5 L / k e y 1 . t x t Enter
C-x C-w ~ / c s 3 5 L / k e y 1 . t x t Enter
y Enter


-*- mode: compilation; default-directory: "~/junk/" -*-
Compilation started at Thu Jan  7 18:54:15

./hello
#include <stdio.h>
int
main (void)
{
  char n = '\n';
  char b = '\\';
  char q = '"';
  char const *p = "#include <stdio.h>%cint%cmain (void)%c{%c  char n = '%cn';%c\
  char b = '%c%c';%c  char q = '%c';%c  char const *p = %c%s%c;%c  printf (p, n\
, n, n, n, b, n, b, b, n, q, n, q, p, q, n, n, n, n);%c  return 0;%c}%c";
  printf (p, n, n, n, n, b, n, b, b, n, q, n, q, p, q, n, n, n, n);
  return 0;
}

Compilation finished at Thu Jan  7 18:54:15

Exercise 1.6
1.
C-x b Enter

2.
( r a n d o m SP 3 5 ) C-j

3.
( s e t q SP x SP ( r a n d o m SP 3 5 ) ) C-j
( s e t q SP y SP ( r a n d o m SP 3 5 ) ) C-j
( s e t q SP z SP ( r a n d o m SP 3 5 ) ) C-j

4.
(* SP x SP y SP z ) C-j

The result equals to x * y * z = 20 * 22 * 16  = 7040

5.
M-: ( * SP x SP y SP z ) Enter
We get the same result 7040

6.
The computers generate "random" numbers by some algorithm.
However, that also means that these "random" numbers obey some kinds of rules.
That contradicts to the mathematical meaning of randomness.
Thus the "random integers" are just pseudo-random.
